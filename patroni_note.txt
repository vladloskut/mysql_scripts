1. Gather information

{
echo "set mouse-=a" >> ~/.vimrc
uname -a
echo ""
cat /etc/*release
echo ""
df -h
echo ""
free -m
echo ""
nproc
echo ""
lsblk
echo ""
cat /sys/block/sdb/queue/rotational
}

max_connections = 100
shared_buffers = 2GB
effective_cache_size = 6GB
maintenance_work_mem = 512MB
checkpoint_completion_target = 0.9
wal_buffers = 16MB
default_statistics_target = 100
random_page_cost = 1.1
effective_io_concurrency = 200
work_mem = 20971kB
min_wal_size = 1GB
max_wal_size = 4GB
max_worker_processes = 2
max_parallel_workers_per_gather = 1
max_parallel_workers = 2
max_parallel_maintenance_workers = 1

------------------------------------------------------------------------------------------------------------------------
Linux msa-txchu1-db01.office.finam.ru 4.19.0-21-amd64 #1 SMP Debian 4.19.249-2 (2022-06-30) x86_64 GNU/Linux

PRETTY_NAME="Debian GNU/Linux 10 (buster)"
NAME="Debian GNU/Linux"
VERSION_ID="10"
VERSION="10 (buster)"
VERSION_CODENAME=buster
ID=debian
HOME_URL="https://www.debian.org/"
SUPPORT_URL="https://www.debian.org/support"
BUG_REPORT_URL="https://bugs.debian.org/"

Filesystem               Size  Used Avail Use% Mounted on
udev                     2.0G     0  2.0G   0% /dev
tmpfs                    395M   48M  347M  13% /run
/dev/mapper/server-root  9.8G  2.2G  7.1G  24% /
tmpfs                    2.0G     0  2.0G   0% /dev/shm
tmpfs                    5.0M     0  5.0M   0% /run/lock
tmpfs                    2.0G     0  2.0G   0% /sys/fs/cgroup
/dev/mapper/data-var      20G  855M   18G   5% /var
tmpfs                    395M     0  395M   0% /run/user/1009
tmpfs                    395M     0  395M   0% /run/user/0

              total        used        free      shared  buff/cache   available
Mem:           3946         886         871          47        2187        2769
Swap:             0           0           0

2

NAME            MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
sda               8:0    0  10G  0 disk
└─sda1            8:1    0  10G  0 part
  └─server-root 254:0    0  10G  0 lvm  /
sdb               8:16   0  20G  0 disk
└─data-var      254:1    0  20G  0 lvm  /var

1
------------------------------------------------------------------------------------------------------------------------

2. Install patroni-related packages and create patroni files

apt-get install -y python3-pip dnsutils python3-dev libpq-dev

{
pip3 install --upgrade pip
pip install --upgrade setuptools
pip install psycopg2-binary
pip install psycopg2
pip install patroni[consul]
}

{
mkdir /var/log/patroni
chmod -R 777 /var/log/patroni
mkdir /etc/patroni
touch /etc/patroni/patroni.yml
}

Prepare service file:

vi /etc/systemd/system/patroni.service

-------------------------------------------------------------------------------
[Unit]
Description=Runners to orchestrate a high-availability PostgreSQL - patroni
After=syslog.target network.target
 
[Service]
Type=simple
User=postgres
Group=postgres
ExecStart=/usr/local/bin/patroni /etc/patroni/patroni.yml
ExecReload=/bin/kill -s HUP $MAINPID
KillMode=process
TimeoutSec=60
Restart=no
 
[Install]
WantedBy=multi-user.target
-------------------------------------------------------------------------------

3. Install PostgreSQL packages

{
echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list;
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -;
apt-get update; apt-get install -y --allow-unauthenticated postgresql-14 postgresql-client-14 pgbouncer pgbadger postgresql-14-repack;
apt list --installed | grep postg;
apt-get clean;
mkdir /home/postgres/;
chown postgres:postgres /home/postgres/;
ls -ld /home/postgres/;
mv -v /etc/logrotate.d/postgresql-common /tmp;
}

{
cp -v /etc/pgbouncer/pgbouncer.ini /etc/pgbouncer/pgbouncer.ini_original
cat /dev/null > /etc/pgbouncer/pgbouncer.ini
echo "[databases]

* = host=127.0.0.1

[pgbouncer]

logfile = /var/log/postgresql/pgbouncer.log
pidfile = /var/run/postgresql/pgbouncer.pid
unix_socket_dir = /var/run/postgresql
listen_addr = *
listen_port = 5450
auth_type = scram-sha-256
auth_file = /etc/pgbouncer/userlist.txt
admin_users = postgres, pgbadmin
stats_users = stats, postgres
pool_mode = session
server_reset_query = DISCARD ALL
max_client_conn = 10000
default_pool_size = 90
reserve_pool_size = 10
reserve_pool_timeout = 5
ignore_startup_parameters = extra_float_digits
log_connections = 0
log_disconnections = 0
log_pooler_errors = 1" >> /etc/pgbouncer/pgbouncer.ini
systemctl restart pgbouncer
systemctl enable pgbouncer
systemctl status pgbouncer
}




{
chmod 777 /tmp/wal-g
mv /tmp/wal-g /usr/local/bin/wal-g
wal-g --version
}

su - postgres

{
echo "set mouse-=a" >> ~/.vimrc
mkdir -p /home/postgres/dbi/scripts
mkdir /home/postgres/dbi/log
mkdir /home/postgres/dbi/config
ln -s /home/postgres/dbi/scripts ~/scripts
ln -s /home/postgres/dbi/log ~/log
ln -s /home/postgres/dbi/config ~/config
ls -ltr ~
cp -v /tmp/*sh ~/scripts
cp -v /tmp/.walg.json ~/config
cp -v /tmp/patroni-s.keytab ~/config
}



cp -v /etc/postgresql/13/cube/pg_hba.conf /etc/postgresql/13/cube/pg_hba.conf_original
cat /dev/null > /etc/postgresql/13/cube/pg_hba.conf


# PostgreSQL Client Authentication Configuration File
# ===================================================
#
# See: https://www.postgresql.org/docs/current/static/auth-pg-hba-conf.html
#
# TYPE  DATABASE        USER            ADDRESS                 METHOD

# Database administrative login by Unix domain socket

local   all             postgres                                peer

# "local" is for Unix domain socket connections only

local   all             all                                     peer

# IPv4 local connections:

host    all             all             127.0.0.1/32            scram-sha-256

# IPv6 local connections:

host    all             all             ::1/128                 scram-sha-256

# Patroni:

host    all             patroni         10.77.120.7/32			scram-sha-256
host    all             patroni         10.77.120.8/32			scram-sha-256
host    replication     replicator      10.77.120.7/32			scram-sha-256
host    replication     replicator      10.77.120.8/32			scram-sha-256

# Allow replication connections from localhost, by a user with the replication privilege

local   replication     all                                     peer
host    replication     all             127.0.0.1/32            scram-sha-256
host    replication     all             ::1/128                 scram-sha-256
host    replication     replica         10.77.120.7/32			trust
host    replication     replica         10.77.120.8/32			trust

{
cp -v /etc/postgresql/13/main/postgresql.conf /etc/postgresql/13/main/postgresql.conf_original
sed -i 's/localhost/*/g' /etc/postgresql/13/main/postgresql.conf
sed -ie '60s/^.//' /etc/postgresql/13/main/postgresql.conf
}

create role replica with replication login;
systemctl restart postgresql@13-main

systemctl stop postgresql@13-main

rm -rf ~/13/main/*
pg_basebackup -h 10.77.120.7 -D /opt/databases/13/main -P -U replica -R --wal-method=stream -C -S p_slot

systemctl start postgresql@14-main

{
psql
create extension pg_buffercache;
create extension pg_stat_statements;
create extension pg_repack;
create extension pgstattuple;
\c template1
create extension pg_buffercache;
create extension pg_stat_statements;
create extension pg_repack;
create extension pgstattuple;
}


CREATE ROLE "monitoring" WITH LOGIN PASSWORD 'CdQ8p5kmE78gnNZM';
GRANT pg_monitor TO "monitoring";
alter ROLE "patroni" WITH LOGIN SUPERUSER ENCRYPTED PASSWORD 'An1O4pW_8Tmnyys6';
alter ROLE "replicator" WITH REPLICATION LOGIN ENCRYPTED PASSWORD '3ZHKE87nWI7j4u9u';


1. Backup all configuration files 
2. Change HBA file
3. Change main configuration file
4. Add users
5. Stop services
6. Start only master
7. Delete data on replica
8. Configure replica, start replica
9. Create extenstions in postgres DB and template1
10. Change PgB configuration file
11. Sync PgB user list
12. Restart PgBouncer
13. Check remote connection
14. Check logrotate files
15. Add crontab commands
16. Prepare patroni configuration file
17. Prepare patroni service file

zabbix:x:109:117::/var/lib/zabbix/:/usr/sbin/nologin
zabbix:x:109:117::/var/lib/zabbix/:/usr/sbin/nologin
zabbix:x:109:117::/var/lib/zabbix/:/usr/sbin/nologin

usermod -a -G postgres zabbix

postgres@msa-txchu1-db01:~/scripts$ ./pgb_^C
postgres@msa-txchu1-db01:~/scripts$ chmod 777 *
postgres@msa-txchu1-db01:~/scripts$ ./pgb_sync.sh
root@msa-txchu1-db01:~# systemctl restart pgbouncer
root@msa-txchu1-db01:~# vi /etc/logrotate.d/pgbouncer
crontabl

Имя пользователя: monitoring
Порт: 6432
Сервера: nya-crmu03-db01.corp.whotrades.eu / nyx-crmu03-db02.corp.whotrades.eu
Пароль (1-ая пара серверов): 59FloQmzZsr9qVXo
Сервера: nya-crmr02-db01.corp.whotrades.eu / nyx-crmr02-db02.corp.whotrades.eu
Пароль (2-ая пара серверов): KnDmcIsdydq2-uUf


create role "lms" with login password 'awEj1BWqBf_MPIon';



create database "lms";
alter database lms owner to lms;
GRANT ALL PRIVILEGES ON DATABASE "lms" to "lms";
REVOKE CREATE on schema public from PUBLIC;
GRANT CREATE on schema public to "lms";

 alter database lms owner to lms;
GRANT ALL PRIVILEGES ON DATABASE "lms" to "lms";
 GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO "lms";
GRANT CREATE on schema public to "lms";


AO_8542F1_IFJ_OBJ_SCHEMA
AO_8542F1_IFJ_OBJ_SCHEMA



